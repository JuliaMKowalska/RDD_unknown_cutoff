lb=b_hiv$lb
init1=Initial_binary(X,lb,ubr,ubl,start,prob,1,nc)
init2=Initial_binary(X,lb,ubr,ubl,start,prob,2,nc)
init3=Initial_binary(X,lb,ubr,ubl,start,prob,3,nc)
init4=Initial_binary(X,lb,ubr,ubl,start,prob,4,nc)
init5=Initial_binary(X,lb,ubr,ubl,start,prob,5,nc)
init6=Initial_binary(X,lb,ubr,ubl,start,prob,6,nc)
init7=Initial_binary(X,lb,ubr,ubl,start,prob,7,nc)
init8=Initial_binary(X,lb,ubr,ubl,start,prob,8,nc)
init9=Initial_binary(X,lb,ubr,ubl,start,prob,9,nc)
init10=Initial_binary(X,lb,ubr,ubl,start,prob,10,nc)
init11=Initial_binary(X,lb,ubr,ubl,start,prob,11,nc)
init12=Initial_binary(X,lb,ubr,ubl,start,prob,12,nc)
datHiv_b=list(N=length(X_b2),x=X_b2,t=T_b2,y=Y_b2,ubr=b_hiv$ubr,ubl=b_hiv$ubl,lb=b_hiv$lb,prob=prob,start=start,nc=nc,jlb=0.2)
HIV_boot2<- run.jags('3poly_fullbin.txt', data=datHiv_b,inits =list(init1,init2,init3,init4,init5,init6,init7,init8,init9,init10,init11,init12) ,monitor=param_full,burnin = 5000,sample=5000,adapt = 1000, method='parallel',n.chains = 12)
HIV_boot2
Samplesb2=HIV_boot2$mcmc
Cb2=combine.mcmc(Samplesb2)[,5]
hist(Cb2,add=TRUE,col=alpha('green',0.2),freq = FALSE)
cat("model
{
for ( i in 1:N ) {
y[i]~dnorm(param[i],Tau[i])
t[i]~dbern(paramt[i])
param[i] <-ifelse(x[i]<c,a1l*(xc[i])+a0l+ilogit(100*(kl-x[i]))*(ilogit((a3l)*(xc[i])^3+(a2l)*(xc[i])^2+b1l*(xc[i])+b0l)-a0l-a1l*xc[i]),a1r*(xc[i])+a0r+ilogit(100*(x[i]-kr))*(ilogit((a3r)*(xc[i])^3+(a2r)*(xc[i])^2+b1r*(xc[i])+b0r)-a0r-a1r*xc[i]))
#Sigma[i]<-sigma1+sigma2*ilogit(100*(x[i]-k1))
Tau[i]<-ifelse(x[i]<c,tau1l+tau2l*ilogit(100*(kl-x[i])),tau1r+tau2r*ilogit(100*(x[i]-kr)))
paramt[i] <- ifelse(x[i]<c,ifelse(x[i]>=c-k1t,a1lt*x[i]+b1lt,a2lt*x[i]+b2lt),ifelse(x[i]<=c+k2t,a1rt*x[i]+b1rt,a2rt*x[i]+b2rt))
#y[i]~dnorm(param[i],tau1)
}
eff=(a0r-a0l)/j
### Define the priors
#sigma1=sqrt(1/tau1)
#sigma2=sqrt(1/tau2)
b2rt=(c+k2t)*(a1rt-a2rt)+b1rt
a2rt~dunif(0,(1-b1rt-(c+k2t)*a1rt)/(MAX-c-k2t))
b1rt=a1lt*c+b1lt+j-a1rt*c
a1rt~dunif(0,(1-a1lt*c-b1lt-j)/k2t)
b1lt=(c-k1t)*(a2lt-a1lt)+b2lt
a1lt~dunif(0,(1-j-a2lt*(c-k1t)-b2lt)/k1t)
b2lt~dunif(-a2lt*MIN,1-j-a2lt*(c-k1t))
a2lt~dunif(0,(1-j)/(c-k1t-MIN))
k1t~dunif(lb,c-ubl)
k2t~dunif(lb,ubr-c)
##c~dunif(MIN+lb,MAX-lb)
j~dunif(max(jlb,abs(a0r-a0l)),1)
b1l=a1l*pow(ilogit(-b0l)*(1-ilogit(-b0l)),-1)
b0l=logit(a0l)
a3l~dnorm(0,pr)
a1l~dunif(-a0l/k,(1-a0l)/k)
a0l~dunif(0,1)
kl~dunif(ubl,c-lb)
b1r=a1r*pow(ilogit(-b0r)*(1-ilogit(-b0r)),-1)
b0r=logit(a0r)
a2r~dnorm(0,pr)
a3r~dnorm(0,pr)
a1r~dunif(-a0r/k,(1-a0r)/k)
a0r~dunif(0,1)
kr~dunif(c+lb,ubr)
xc=x-c
c=(ct+start)/nc
ct~dcat(prob)
pr=0.000001
MAX=max(x)
MIN=min(x)
}", file="3poly_fullbin2.txt")
data <- read.dta("Downloads/CKT_2023_SIM--ART.dta")
dd = data[complete.cases(data[,c("visit_test_6_18", "art_6m", "cd4")]),]
ddtr=subset(dd,dd$cd4>=250 & dd$cd4<=420)
nt=length(X)
X=ddtr$cd4/100
Y=ddtr$visit_test_6_18
T=ddtr$art_6m
T=ifelse(T==1,0,1)
b_hiv=bounds(X)
b_hiv
prob=rep(1,100)
start=299
ubr=b_hiv$ubr
ubl=b_hiv$ubl
lb=b_hiv$lb
nc=100
datHivTr=list(N=length(X),x=X,t=T,y=Y,ubr=b_hiv$ubr,ubl=b_hiv$ubl,lb=b_hiv$lb,prob=prob,start=start,nc=nc,jlb=0.2)
HIV_boot2<- run.jags('3poly_fullbin2.txt', data=datHivTr,monitor=param_full,burnin = 5000,sample=5000,adapt = 1000, method='parallel',n.chains = 5)
cat("model
{
for ( i in 1:N ) {
y[i]~dnorm(param[i],Tau[i])
t[i]~dbern(paramt[i])
param[i] <-ifelse(x[i]<c,a1l*(xc[i])+a0l+ilogit(100*(kl-x[i]))*(ilogit((a3l)*(xc[i])^3+(a2l)*(xc[i])^2+b1l*(xc[i])+b0l)-a0l-a1l*xc[i]),a1r*(xc[i])+a0r+ilogit(100*(x[i]-kr))*(ilogit((a3r)*(xc[i])^3+(a2r)*(xc[i])^2+b1r*(xc[i])+b0r)-a0r-a1r*xc[i]))
#Sigma[i]<-sigma1+sigma2*ilogit(100*(x[i]-k1))
Tau[i]<-ifelse(x[i]<c,tau1l+tau2l*ilogit(100*(kl-x[i])),tau1r+tau2r*ilogit(100*(x[i]-kr)))
paramt[i] <- ifelse(x[i]<c,ifelse(x[i]>=c-k1t,a1lt*x[i]+b1lt,a2lt*x[i]+b2lt),ifelse(x[i]<=c+k2t,a1rt*x[i]+b1rt,a2rt*x[i]+b2rt))
#y[i]~dnorm(param[i],tau1)
}
eff=(a0r-a0l)/j
### Define the priors
#sigma1=sqrt(1/tau1)
#sigma2=sqrt(1/tau2)
b2rt=(c+k2t)*(a1rt-a2rt)+b1rt
a2rt~dunif(0,(1-b1rt-(c+k2t)*a1rt)/(MAX-c-k2t))
b1rt=a1lt*c+b1lt+j-a1rt*c
a1rt~dunif(0,(1-a1lt*c-b1lt-j)/k2t)
b1lt=(c-k1t)*(a2lt-a1lt)+b2lt
a1lt~dunif(0,(1-j-a2lt*(c-k1t)-b2lt)/k1t)
b2lt~dunif(-a2lt*MIN,1-j-a2lt*(c-k1t))
a2lt~dunif(0,(1-j)/(c-k1t-MIN))
k1t~dunif(lb,c-ubl)
k2t~dunif(lb,ubr-c)
##c~dunif(MIN+lb,MAX-lb)
j~dunif(max(jlb,abs(a0r-a0l)),1)
b1l=a1l*pow(ilogit(-b0l)*(1-ilogit(-b0l)),-1)
b0l=logit(a0l)
a3l~dnorm(0,pr)
a1l~dunif(-a0l/kl,(1-a0l)/kl)
a0l~dunif(0,1)
kl~dunif(ubl,c-lb)
b1r=a1r*pow(ilogit(-b0r)*(1-ilogit(-b0r)),-1)
b0r=logit(a0r)
a2r~dnorm(0,pr)
a3r~dnorm(0,pr)
a1r~dunif(-a0r/kr,(1-a0r)/kr)
a0r~dunif(0,1)
kr~dunif(c+lb,ubr)
xc=x-c
c=(ct+start)/nc
ct~dcat(prob)
pr=0.000001
MAX=max(x)
MIN=min(x)
}", file="3poly_fullbin2.txt")
HIV_alt<- run.jags('3poly_fullbin2.txt', data=datHivTr,monitor=param_full,burnin = 5000,sample=5000,adapt = 1000, method='parallel',n.chains = 5)
cat("model
{
for ( i in 1:N ) {
y[i]~dbern(param[i])
t[i]~dbern(paramt[i])
param[i] <-ifelse(x[i]<c,a1l*(xc[i])+a0l+ilogit(100*(kl-x[i]))*(ilogit((a3l)*(xc[i])^3+(a2l)*(xc[i])^2+b1l*(xc[i])+b0l)-a0l-a1l*xc[i]),a1r*(xc[i])+a0r+ilogit(100*(x[i]-kr))*(ilogit((a3r)*(xc[i])^3+(a2r)*(xc[i])^2+b1r*(xc[i])+b0r)-a0r-a1r*xc[i]))
#Sigma[i]<-sigma1+sigma2*ilogit(100*(x[i]-k1))
paramt[i] <- ifelse(x[i]<c,ifelse(x[i]>=c-k1t,a1lt*x[i]+b1lt,a2lt*x[i]+b2lt),ifelse(x[i]<=c+k2t,a1rt*x[i]+b1rt,a2rt*x[i]+b2rt))
#y[i]~dnorm(param[i],tau1)
}
eff=(a0r-a0l)/j
### Define the priors
#sigma1=sqrt(1/tau1)
#sigma2=sqrt(1/tau2)
b2rt=(c+k2t)*(a1rt-a2rt)+b1rt
a2rt~dunif(0,(1-b1rt-(c+k2t)*a1rt)/(MAX-c-k2t))
b1rt=a1lt*c+b1lt+j-a1rt*c
a1rt~dunif(0,(1-a1lt*c-b1lt-j)/k2t)
b1lt=(c-k1t)*(a2lt-a1lt)+b2lt
a1lt~dunif(0,(1-j-a2lt*(c-k1t)-b2lt)/k1t)
b2lt~dunif(-a2lt*MIN,1-j-a2lt*(c-k1t))
a2lt~dunif(0,(1-j)/(c-k1t-MIN))
k1t~dunif(lb,c-ubl)
k2t~dunif(lb,ubr-c)
##c~dunif(MIN+lb,MAX-lb)
j~dunif(max(jlb,abs(a0r-a0l)),1)
b1l=a1l*pow(ilogit(-b0l)*(1-ilogit(-b0l)),-1)
b0l=logit(a0l)
a3l~dnorm(0,pr)
a1l~dunif(-a0l/kl,(1-a0l)/kl)
a0l~dunif(0,1)
kl~dunif(ubl,c-lb)
b1r=a1r*pow(ilogit(-b0r)*(1-ilogit(-b0r)),-1)
b0r=logit(a0r)
a2r~dnorm(0,pr)
a3r~dnorm(0,pr)
a1r~dunif(-a0r/kr,(1-a0r)/kr)
a0r~dunif(0,1)
kr~dunif(c+lb,ubr)
xc=x-c
c=(ct+start)/nc
ct~dcat(prob)
pr=0.000001
MAX=max(x)
MIN=min(x)
}", file="3poly_fullbin2.txt")
HIV_alt<- run.jags('3poly_fullbin2.txt', data=datHivTr,monitor=param_full,burnin = 5000,sample=5000,adapt = 1000, method='parallel',n.chains = 5)
cat("model
{
for ( i in 1:N ) {
y[i]~dbern(param[i])
t[i]~dbern(paramt[i])
param[i] <-ifelse(x[i]<c,a1l*(xc[i])+a0l+ilogit(100*(kl-x[i]))*(ilogit((a3l)*(xc[i])^3+(a2l)*(xc[i])^2+b1l*(xc[i])+b0l)-a0l-a1l*xc[i]),a1r*(xc[i])+a0r+ilogit(100*(x[i]-kr))*(ilogit((a3r)*(xc[i])^3+(a2r)*(xc[i])^2+b1r*(xc[i])+b0r)-a0r-a1r*xc[i]))
#Sigma[i]<-sigma1+sigma2*ilogit(100*(x[i]-k1))
paramt[i] <- ifelse(x[i]<c,ifelse(x[i]>=c-k1t,a1lt*x[i]+b1lt,a2lt*x[i]+b2lt),ifelse(x[i]<=c+k2t,a1rt*x[i]+b1rt,a2rt*x[i]+b2rt))
#y[i]~dnorm(param[i],tau1)
}
eff=(a0r-a0l)/j
### Define the priors
#sigma1=sqrt(1/tau1)
#sigma2=sqrt(1/tau2)
b2rt=(c+k2t)*(a1rt-a2rt)+b1rt
a2rt~dunif(0,(1-b1rt-(c+k2t)*a1rt)/(MAX-c-k2t))
b1rt=a1lt*c+b1lt+j-a1rt*c
a1rt~dunif(0,(1-a1lt*c-b1lt-j)/k2t)
b1lt=(c-k1t)*(a2lt-a1lt)+b2lt
a1lt~dunif(0,(1-j-a2lt*(c-k1t)-b2lt)/k1t)
b2lt~dunif(-a2lt*MIN,1-j-a2lt*(c-k1t))
a2lt~dunif(0,(1-j)/(c-k1t-MIN))
k1t~dunif(lb,c-ubl)
k2t~dunif(lb,ubr-c)
##c~dunif(MIN+lb,MAX-lb)
j~dunif(max(jlb,abs(a0r-a0l)),1)
b1l=a1l*pow(ilogit(-b0l)*(1-ilogit(-b0l)),-1)
b0l=logit(a0l)
a3l~dnorm(0,pr)
a2l~dnorm(0,pr)
a1l~dunif(-a0l/kl,(1-a0l)/kl)
a0l~dunif(0,1)
kl~dunif(ubl,c-lb)
b1r=a1r*pow(ilogit(-b0r)*(1-ilogit(-b0r)),-1)
b0r=logit(a0r)
a2r~dnorm(0,pr)
a3r~dnorm(0,pr)
a1r~dunif(-a0r/kr,(1-a0r)/kr)
a0r~dunif(0,1)
kr~dunif(c+lb,ubr)
xc=x-c
c=(ct+start)/nc
ct~dcat(prob)
pr=0.000001
MAX=max(x)
MIN=min(x)
}", file="3poly_fullbin2.txt")
HIV_alt<- run.jags('3poly_fullbin2.txt', data=datHivTr,monitor=param_full,burnin = 5000,sample=5000,adapt = 1000, method='parallel',n.chains = 5)
HIV_alt
HIV_org<- run.jags('3poly_fullbin.txt', data=datHivTr,monitor=param_full,burnin = 5000,sample=5000,adapt = 1000, method='parallel',n.chains = 5)
HIV_org
HIV_alt
save(HIV_alt,'HIV_alt')
save(HIV_alt,file='HIV_alt')
Initial_binary2<-function(X,lb,ubr,ubl,start,prob,s,nc){
set.seed(s+10)
pr=0.1
MIN=min(X)
MAX=max(X)
ct=sample(seq(1,length(prob),1),1,prob=prob/length(prob))
c=(ct+start)/nc
kl=runif(1,ubl,c-0.5)
kr=runif(1,c+0.5,ubr)
a0l=runif(1,0.5,0.75)
a1l=runif(1,-a0r/kr,(1-a0r)/kr)
a2l=rnorm(1,0,pr)
a3l=rnorm(1,0,pr)
a0r=runif(1,0.5,0.75)
a1r=runif(1,-a0r/kr,(1-a0r)/kr)
a2r=rnorm(1,0,pr)
a3r=rnorm(1,0,pr)
j=runif(1,max(0.2,abs(a0r-a0l)),1)
k1t=runif(1,lb,c-ubl)
k2t=runif(1,lb,ubr-c)
a2lt=runif(1,0,(1-j)/(c-k1t-MIN))
b2lt=runif(1,-a2lt*MIN,1-j-a2lt*(c-k1t))
a1lt=runif(1,0,(1-j-a2lt*(c-k1t)-b2lt)/k1t)
b1lt=(c-k1t)*(a2lt-a1lt)+b2lt
a1rt=runif(1,0,(1-a1lt*c-b1lt-j)/k2t)
b1rt=a1lt*c+b1lt+j-a1rt*c
a2rt=runif(1,0,(1-b1rt-(c+k2t)*a1rt)/(MAX-c-k2t))
b2rt=(c+k2t)*(a1rt-a2rt)+b1rt
#print(list(c=c,j=j,a0l=a0l,a1l=a1l,a2l=a2l,a3l=a3l,a0r=a0r,a1r=a1r,a2r=a2r,a3r=a3r,tau1r=tau1r,tau2pr=tau2pr,kl=kl,kr=kr,k1t=k1t,k2t=k2t,a1lt=a1lt,a2lt=a2lt,b2lt=b2lt,a1rt=a1rt,a2rt=a2rt,.RNG.seed=s))
return(list(ct=ct,j=j,a0l=a0l,a1l=a1l,a2l=a2l,a3l=a3l,a0r=a0r,a1r=a1r,a2r=a2r,a3r=a3r,kl=kl,kr=kr,k1t=k1t,k2t=k2t,a1lt=a1lt,a2lt=a2lt,b2lt=b2lt,a1rt=a1rt,a2rt=a2rt,.RNG.seed=s))
}
dd = data[complete.cases(data[,c("visit_test_6_18", "art_6m", "cd4")]),]
ddtr=subset(dd,dd$cd4>=110 & dd$cd4<=950)
X=ddtr$cd4/1000
Y=ddtr$visit_test_6_18
T=ddtr$art_6m
T=ifelse(T==1,0,1)
b_hiv=bounds(X)
prob=rep(1,100)
start=299
ubr=b_hiv$ubr
ubl=b_hiv$ubl
lb=b_hiv$lb
nc=1000
init1=Initial_binary2(X,lb,ubr,ubl,start,prob,1,nc)
Initial_binary2<-function(X,lb,ubr,ubl,start,prob,s,nc){
set.seed(s+10)
pr=0.1
MIN=min(X)
MAX=max(X)
ct=sample(seq(1,length(prob),1),1,prob=prob/length(prob))
c=(ct+start)/nc
kl=runif(1,ubl,c-0.05)
kr=runif(1,c+0.05,ubr)
a0l=runif(1,0.5,0.75)
a1l=runif(1,-a0r/kr,(1-a0r)/kr)
a2l=rnorm(1,0,pr)
a3l=rnorm(1,0,pr)
a0r=runif(1,0.5,0.75)
a1r=runif(1,-a0r/kr,(1-a0r)/kr)
a2r=rnorm(1,0,pr)
a3r=rnorm(1,0,pr)
j=runif(1,max(0.2,abs(a0r-a0l)),1)
k1t=runif(1,lb,c-ubl)
k2t=runif(1,lb,ubr-c)
a2lt=runif(1,0,(1-j)/(c-k1t-MIN))
b2lt=runif(1,-a2lt*MIN,1-j-a2lt*(c-k1t))
a1lt=runif(1,0,(1-j-a2lt*(c-k1t)-b2lt)/k1t)
b1lt=(c-k1t)*(a2lt-a1lt)+b2lt
a1rt=runif(1,0,(1-a1lt*c-b1lt-j)/k2t)
b1rt=a1lt*c+b1lt+j-a1rt*c
a2rt=runif(1,0,(1-b1rt-(c+k2t)*a1rt)/(MAX-c-k2t))
b2rt=(c+k2t)*(a1rt-a2rt)+b1rt
#print(list(c=c,j=j,a0l=a0l,a1l=a1l,a2l=a2l,a3l=a3l,a0r=a0r,a1r=a1r,a2r=a2r,a3r=a3r,tau1r=tau1r,tau2pr=tau2pr,kl=kl,kr=kr,k1t=k1t,k2t=k2t,a1lt=a1lt,a2lt=a2lt,b2lt=b2lt,a1rt=a1rt,a2rt=a2rt,.RNG.seed=s))
return(list(ct=ct,j=j,a0l=a0l,a1l=a1l,a2l=a2l,a3l=a3l,a0r=a0r,a1r=a1r,a2r=a2r,a3r=a3r,kl=kl,kr=kr,k1t=k1t,k2t=k2t,a1lt=a1lt,a2lt=a2lt,b2lt=b2lt,a1rt=a1rt,a2rt=a2rt,.RNG.seed=s))
}
init1=Initial_binary2(X,lb,ubr,ubl,start,prob,1,nc)
init2=Initial_binary2(X,lb,ubr,ubl,start,prob,2,nc)
init3=Initial_binary2(X,lb,ubr,ubl,start,prob,3,nc)
init4=Initial_binary2(X,lb,ubr,ubl,start,prob,4,nc)
init5=Initial_binary2(X,lb,ubr,ubl,start,prob,5,nc)
init6=Initial_binary2(X,lb,ubr,ubl,start,prob,6,nc)
datHivfull=list(N=length(X),x=X,t=T,y=Y,ubr=b_hiv$ubr,ubl=b_hiv$ubl,lb=b_hiv$lb,prob=prob,start=start,nc=nc,jlb=0.2)
param_full=c('c','j','kl','kr','eff','a0l','a1l','a2l','a3l','a0r','a1r','a2r','a3r','b1lt','a1lt','a2lt','b2lt','b1rt','a1rt','a2rt','b2rt','k1t','k2t')
HIV_alt<- run.jags('3poly_fullbin2.txt', data=datHivfull,monitor=param_full,inits =list(init1,init2,init3,init4,init5,init6),burnin = 10000,sample=20000,adapt = 1000, method='parallel',n.chains = 6)
Initial_binary2<-function(X,lb,ubr,ubl,start,prob,s,nc){
set.seed(s+10)
pr=0.1
MIN=min(X)
MAX=max(X)
ct=sample(seq(1,length(prob),1),1,prob=prob/length(prob))
c=(ct+start)/nc
kl=runif(1,ubl,c-0.05)
kr=runif(1,c+0.05,ubr)
a0l=runif(1,0.5,0.75)
a1l=runif(1,-a0r/kr,(1-a0r)/kr)
a2l=rnorm(1,0,pr)
a3l=rnorm(1,0,pr)
a0r=runif(1,0.5,0.75)
a1r=runif(1,-a0r/kr,(1-a0r)/kr)
a2r=rnorm(1,0,pr)
a3r=rnorm(1,0,pr)
j=runif(1,max(0.2,abs(a0r-a0l)),1)
k1t=runif(1,lb,c-ubl)
k2t=runif(1,lb,ubr-c)
a2lt=runif(1,0,(1-j)/(c-k1t-MIN))
b2lt=runif(1,-a2lt*MIN,1-j-a2lt*(c-k1t))
a1lt=runif(1,0,(1-j-a2lt*(c-k1t)-b2lt)/k1t)
b1lt=(c-k1t)*(a2lt-a1lt)+b2lt
a1rt=runif(1,0,(1-a1lt*c-b1lt-j)/k2t)
b1rt=a1lt*c+b1lt+j-a1rt*c
a2rt=runif(1,0,(1-b1rt-(c+k2t)*a1rt)/(MAX-c-k2t))
b2rt=(c+k2t)*(a1rt-a2rt)+b1rt
#print(list(c=c,j=j,a0l=a0l,a1l=a1l,a2l=a2l,a3l=a3l,a0r=a0r,a1r=a1r,a2r=a2r,a3r=a3r,tau1r=tau1r,tau2pr=tau2pr,kl=kl,kr=kr,k1t=k1t,k2t=k2t,a1lt=a1lt,a2lt=a2lt,b2lt=b2lt,a1rt=a1rt,a2rt=a2rt,.RNG.seed=s))
return(list(ct=ct,j=j,a0l=a0l,a1l=a1l,a2l=a2l,a3l=a3l,a0r=a0r,a1r=a1r,a2r=a2r,a3r=a3r,kl=kl,kr=kr,k1t=k1t,k2t=k2t,a1lt=a1lt,a2lt=a2lt,b2lt=b2lt,a1rt=a1rt,a2rt=a2rt,.RNG.seed=s))
}
init1=Initial_binary2(X,lb,ubr,ubl,start,prob,10,nc)
HIV_alt<- run.jags('3poly_fullbin2.txt', data=datHivfull,monitor=param_full,inits =list(init1,init2,init3,init4,init5,init6),burnin = 10000,sample=20000,adapt = 1000, method='parallel',n.chains = 6)
Initial_binary2<-function(X,lb,ubr,ubl,start,prob,s,nc){
set.seed(s+10)
pr=0.1
MIN=min(X)
MAX=max(X)
ct=sample(seq(1,length(prob),1),1,prob=prob/length(prob))
c=(ct+start)/nc
kl=runif(1,ubl,c-0.05)
kr=runif(1,c+0.05,ubr)
a0l=runif(1,0.5,0.75)
a1l=runif(1,-a0l/kr,(1-a0l)/kr)
a2l=rnorm(1,0,pr)
a3l=rnorm(1,0,pr)
a0r=runif(1,0.5,0.75)
a1r=runif(1,-a0r/kr,(1-a0r)/kr)
a2r=rnorm(1,0,pr)
a3r=rnorm(1,0,pr)
j=runif(1,max(0.2,abs(a0r-a0l)),1)
k1t=runif(1,lb,c-ubl)
k2t=runif(1,lb,ubr-c)
a2lt=runif(1,0,(1-j)/(c-k1t-MIN))
b2lt=runif(1,-a2lt*MIN,1-j-a2lt*(c-k1t))
a1lt=runif(1,0,(1-j-a2lt*(c-k1t)-b2lt)/k1t)
b1lt=(c-k1t)*(a2lt-a1lt)+b2lt
a1rt=runif(1,0,(1-a1lt*c-b1lt-j)/k2t)
b1rt=a1lt*c+b1lt+j-a1rt*c
a2rt=runif(1,0,(1-b1rt-(c+k2t)*a1rt)/(MAX-c-k2t))
b2rt=(c+k2t)*(a1rt-a2rt)+b1rt
#print(list(c=c,j=j,a0l=a0l,a1l=a1l,a2l=a2l,a3l=a3l,a0r=a0r,a1r=a1r,a2r=a2r,a3r=a3r,tau1r=tau1r,tau2pr=tau2pr,kl=kl,kr=kr,k1t=k1t,k2t=k2t,a1lt=a1lt,a2lt=a2lt,b2lt=b2lt,a1rt=a1rt,a2rt=a2rt,.RNG.seed=s))
return(list(ct=ct,j=j,a0l=a0l,a1l=a1l,a2l=a2l,a3l=a3l,a0r=a0r,a1r=a1r,a2r=a2r,a3r=a3r,kl=kl,kr=kr,k1t=k1t,k2t=k2t,a1lt=a1lt,a2lt=a2lt,b2lt=b2lt,a1rt=a1rt,a2rt=a2rt,.RNG.seed=s))
}
init1=Initial_binary2(X,lb,ubr,ubl,start,prob,1,nc)
init2=Initial_binary2(X,lb,ubr,ubl,start,prob,2,nc)
init3=Initial_binary2(X,lb,ubr,ubl,start,prob,3,nc)
init4=Initial_binary2(X,lb,ubr,ubl,start,prob,4,nc)
init5=Initial_binary2(X,lb,ubr,ubl,start,prob,5,nc)
init6=Initial_binary2(X,lb,ubr,ubl,start,prob,6,nc)
HIV_altfull<- run.jags('3poly_fullbin2.txt', data=datHivfull,monitor=param_full,inits =list(init1,init2,init3,init4,init5,init6),burnin = 10000,sample=20000,adapt = 1000, method='parallel',n.chains = 6)
save(HIV_altfull,file='HIV_altFULL')
HIV_altfull
plot <- ggplot(count.df, aes(lev, Freq,fill=type))
plot + geom_bar(stat="identity") +
labs(title="Posterior probability - cutoff location",
y="Probability", x="CD4 Count") + abline(v='355')+
theme_light(base_size = 18)
HIV_altfull
data <- read.dta("downloads/CKT_2023_SIM--ART.dta")
library(foreign)
library(ggplot2)
library(ggpubr)
library(runjags)
library(rjags)
library(bayestestR)
library(dplyr)
library(rdrobust)
source('ART2024_functions')
setwd('\RDD_unknown_cutoff\ART2024_replication')
setwd('RDD_unknown_cutoff\ART2024_replication')
setwd('/RDD_unknown_cutoff/ART2024_replication')
setwd("~/Documents/GitHub/RDD_unknown_cutoff/ART2024_replication")
setwd("~/Documents/GitHub/RDD_unknown_cutoff/ART2024_replication")
source('ART2024_functions')
source('ART2024_functions.R')
data <- read.dta("downloads/CKT_2023_SIM--ART.dta")
data <- read.dta("Downloads/CKT_2023_SIM--ART.dta")
data <- read.dta("/Users/julia/Downloads/CKT_2023_SIM--ART.dta")
dd = data[complete.cases(data[,c("visit_test_6_18", "art_6m", "cd4")]),]
X=dd$cd4
Y=dd$visit_test_6_18
T=dd$art_6m
T=ifelse(T==1,0,1)
## Main code ##
# Scatter plot of the treatment data
binsize=5
c=NULL
X_plot=Bin_data(T,X,c,binsize)[[2]]
T_plot=Bin_data(T,X,c,binsize)[[1]]
plot.df=data.frame('X'=X_plot,'Y'=T_plot)
ggscatter(plot.df, x = "X", y = "Y",color = "gray", size = 3, alpha = 0.6)+labs( y="Proportion T=1", x="CD4 Count",title = 'Prob. of delayed ART initiation') +
theme_classic(base_size = 12)+theme(text = element_text(family='serif'),axis.text=element_text(family = "sans"),legend.text =element_text(size = 13),legend.position = 'bottom')
# Scatter plot of the outcome data
binsize=5
c=NULL
X_plot=Bin_data(Y,X,c,binsize)[[2]]
Y_plot=Bin_data(Y,X,c,binsize)[[1]]
plot.df=data.frame('X'=X_plot,'Y'=Y_plot)
ggscatter(plot.df, x = "X", y = "Y",color = "gray", size = 3, alpha = 0.6)+labs( y="Proportion T=1", x="CD4 Count",title = 'Prob. of delayed ART initiation') +
theme_classic(base_size = 12)+theme(text = element_text(family='serif'),axis.text=element_text(family = "sans"),legend.text =element_text(size = 13),legend.position = 'bottom')
# -- FULL DATASET --
# Initial trimming & normalizing the data
nc=1000 # normalizing constant
ddtr=subset(dd,dd$cd4>=50 & dd$cd4<=950)
X=ddtr$cd4/nc
Y=ddtr$visit_test_6_18
T=ddtr$art_6m
T=ifelse(T==1,0,1)
# Window bounds
{b_hiv=bounds(X,25)
ubr=b_hiv$ubr
ubl=b_hiv$ubl
lb=b_hiv$lb
b_hivt=bounds(X,25)
ubrt=b_hivt$ubr
ublt=b_hivt$ubl}
# Prior on c - uniform between 300 and 399
start=299
prob=rep(1,100)
# Lower bound on the jump size in the treatment probability function
jlb=0.2
# Fitting two constant functions to initialize values of c (approx 50 seconds)
datHIV_T=list(N=length(X),x=X,t=T,jlb=0.2,prob=prob,start=start,nc=nc,lb=lb)
initcART=list(ct=50,al=0.5,j=0.3,.RNG.seed=1,.RNG.name="base::Mersenne-Twister")
param_c=c('ct')
datHIV_c<- run.jags('cutoff_initial_dis.txt',inits = list(initcART) ,data=datHIV_T,monitor=param_c,burnin = 1000,sample=2000,adapt = 100,n.chains = 1,method = 'simple')
Ct_start=as.numeric(combine.mcmc(datHIV_c))
# Fitting treatment model (approx 35 minutes)
init1=Initial_BINARY_treatment(X,T,Ct_start,lb,ubr,ubl,start,prob,100,nc)
init2=Initial_BINARY_treatment(X,T,Ct_start,lb,ubr,ubl,start,prob,200,nc)
init3=Initial_BINARY_treatment(X,T,Ct_start,lb,ubr,ubl,start,prob,300,nc)
init4=Initial_BINARY_treatment(X,T,Ct_start,lb,ubr,ubl,start,prob,400,nc)
param_cj=c('c','j')
datHIV_T=list(N=length(X),x=X,t=T,jlb=jlb,prob=prob,start=start,nc=nc,lb=lb,ubrt=ubrt,ublt=ublt)
system.time(HIV_FULL_treatment<- run.jags('treatment_BIN.txt', data=datHIV_T,monitor=param_cj,inits =list(init1,init2,init3,init4),burnin = 40000,sample=25000,adapt = 1000, method='parallel',n.chains = 4))
# Fitting full LoTTA model (approx 13.5 hours)
init1=Initial_BINARY(X,T,Y,Ct_start,lb,ubr,ubl,start,prob,100,nc)
init2=Initial_BINARY(X,T,Y,Ct_start,lb,ubr,ubl,start,prob,200,nc)
init3=Initial_BINARY(X,T,Y,Ct_start,lb,ubr,ubl,start,prob,300,nc)
init4=Initial_BINARY(X,T,Y,Ct_start,lb,ubr,ubl,start,prob,400,nc)
datHivfull=list(N=length(X),x=X,t=T,y=Y,ubr=b_hiv$ubr,ubl=b_hiv$ubl,ubrt=ubrt,ublt=ublt,lb=b_hiv$lb,prob=prob,start=start,nc=nc,jlb=jlb)
param_full=c('c','j','kl','kr','eff','a0l','a1l','a2l','a3l','a0r','a1r','a2r','a3r','b1lt','a1lt','a2lt','b2lt','b1rt','a1rt','a2rt','b2rt','k1t','k2t')
system.time(HIV_FULL<- run.jags('LoTTA_BIN', data=datHivfull,monitor=param_full,inits =list(init1,init2,init3,init4),burnin = 40000,sample=25000,adapt = 1000, method='parallel',n.chains = 4))
# Fitting full LoTTA model (approx 5.5 hours)
init1=Initial_BINARY(X,T,Y,Ct_startTr,lb,ubr,ubl,start,prob,100,nc)
# -- TRIMMED DATASET --
ddtr=subset(dd,dd$cd4>=200 & dd$cd4<=500)
X=ddtr$cd4/nc
Y=ddtr$visit_test_6_18
T=ddtr$art_6m
T=ifelse(T==1,0,1)
{b_hiv=bounds(X,25)
prob=rep(1,100)
start=300
ubr=b_hiv$ubr
ubl=b_hiv$ubl
lb=b_hiv$lb
b_hivt=bounds(X,25)
ubrt=b_hivt$ubr
ublt=b_hivt$ubl}
datHIV_T=list(N=length(X),x=X,t=T,jlb=jlb,prob=prob,start=start,nc=nc,lb=lb)
initcART=list(ct=50,al=0.5,j=0.3,.RNG.seed=1,.RNG.name="base::Mersenne-Twister")
param_c=c('ct')
datHIV_cTr<- run.jags('cutoff_initial_dis.txt',inits = list(initcART) ,data=datHIV_T,monitor=param_c,burnin = 1000,sample=2000,adapt = 100,n.chains = 1,method = 'simple')
Ct_startTr=as.numeric(combine.mcmc(datHIV_cTr))
# Fitting full LoTTA model (approx 5.5 hours)
init1=Initial_BINARY(X,T,Y,Ct_startTr,lb,ubr,ubl,start,prob,100,nc)
init2=Initial_BINARY(X,T,Y,Ct_startTr,lb,ubr,ubl,start,prob,200,nc)
init3=Initial_BINARY(X,T,Y,Ct_startTr,lb,ubr,ubl,start,prob,300,nc)
init4=Initial_BINARY(X,T,Y,Ct_startTr,lb,ubr,ubl,start,prob,400,nc)
datHivTr=list(N=length(X),x=X,t=T,y=Y,ubr=b_hiv$ubr,ubl=b_hiv$ubl,ubrt=ubrt,ublt=ublt,lb=b_hiv$lb,prob=prob,start=start,nc=nc,jlb=jlb)
param_full=c('c','j','kl','kr','eff','a0l','a1l','a2l','a3l','a0r','a1r','a2r','a3r','b1lt','a1lt','a2lt','b2lt','b1rt','a1rt','a2rt','b2rt','k1t','k2t')
system.time(HIV_TRIM<- run.jags('LoTTA_BIN', data=datHivTr,monitor=param_full,inits =list(init1,init2,init3,init4),burnin = 40000,sample=25000,adapt = 1000, method='parallel',n.chains = 4))
